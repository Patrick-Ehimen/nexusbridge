version: "3.8"

services:
  # PostgreSQL database for relayer state management
  postgres:
    image: postgres:15-alpine
    container_name: nexus-bridge-postgres
    environment:
      POSTGRES_DB: nexus_bridge
      POSTGRES_USER: nexus
      POSTGRES_PASSWORD: nexus_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus -d nexus_bridge"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Hardhat local Ethereum node
  hardhat:
    build:
      context: ./docker/hardhat
      dockerfile: Dockerfile
    container_name: nexus-bridge-hardhat
    ports:
      - "8545:8545"
    volumes:
      - ./contracts:/app/contracts
    command: npx hardhat node --hostname 0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Polygon testnet connection (using public RPC)
  # Note: For production, consider running your own Polygon node
  polygon-rpc:
    image: nginx:alpine
    container_name: nexus-bridge-polygon-proxy
    ports:
      - "8546:80"
    volumes:
      - ./docker/nginx/polygon-proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - hardhat

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: nexus-bridge-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: nexus-bridge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"

  # Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: nexus-bridge-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
